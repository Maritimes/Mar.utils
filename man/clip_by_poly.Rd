% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/clip_by_poly.r
\name{clip_by_poly}
\alias{clip_by_poly}
\title{clip_by_poly}
\usage{
clip_by_poly(
  df = NULL,
  lat.field = "LATITUDE",
  lon.field = "LONGITUDE",
  clip.poly = NULL,
  buffer.m = NULL,
  invert = F,
  return.sf = T
)
}
\arguments{
\item{df}{default is \code{NULL}.  This is the dataframe/sf object that will be altered.  It 
can be a dataframe,  sp::spatial* object or an sf object (point, line or polygon).}

\item{lat.field}{the default is \code{"LATITUDE"}. This is the name of the field holding latitude 
values (in decimal degrees).  This is only necessary if \code{input} is a non spatial df.}

\item{lon.field}{the default is \code{"LONGITUDE"}.  This is the name of the field holding 
longitude values (in decimal degrees).  This is only necessary if \code{input} is a non spatial 
df.}

\item{clip.poly}{default is \code{NULL}. This is either an sf polygon, an sp:spatialPolygons
object, or the full path to a shapefile (including the '.shp' extension).  This is the polygon 
that will be used to clip the \code{input} object.}

\item{buffer.m}{default is \code{NULL}. This is the distance in meters to buffer the border of 
\code{clip.poly}}

\item{invert}{default is \code{FALSE}.  By default, \code{input} will be clipped such that 
\itemize{
\item \code{points} only those points within the \code{clip.poly} are returned 
\item \code{lines} only those lines that cross or are contained by the \code{clip.poly} are 
returned 
\item \code{polygons} only those polygons that cross or are contained by the \code{clip.poly} are 
returned 
}
However, if \code{invert} is set to \code{TRUE}, than any points/lines/polygons that intersect/
are contained by the \code{clip.poly} will be removed.}

\item{return.sf}{default is \code{TRUE}.  By default, the returned object will be an sf object.
Set to FALSE to return a dataframe only.}
}
\value{
sf object
}
\description{
This function takes a dataframe and a polygon, and clips the dataframe using the
the extent of the polygon.  The polygon can be buffered as required to select nearby 
data as well.
}
\note{
If the input polygon has no projection assigned, it will be assumed to be in Geographic, 
WGS84. FYI, during buffering, the polygon is briefly converted to UTMZone20 since the use of 
distances requires projecting the data.
}
\seealso{
Other spatial: 
\code{\link{df_qc_spatial}()},
\code{\link{df_sf_to_gpkg}()},
\code{\link{df_to_sf}()},
\code{\link{gpkglayers_to_shapefiles}()},
\code{\link{identify_area}()},
\code{\link{make_segments}()},
\code{\link{make_segments_isdb}()},
\code{\link{prepare_shape_fields}()}
}
\author{
Mike McMahon, \email{Mike.McMahon@dfo-mpo.gc.ca}
}
\concept{spatial}
