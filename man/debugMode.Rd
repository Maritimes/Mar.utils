% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/debug_utils.R
\name{debugMode}
\alias{debugMode}
\title{debugMode}
\usage{
debugMode(enable = TRUE, package = NULL, r_dir = "R", package_path = NULL)
}
\arguments{
\item{enable}{Logical. If TRUE, enables debug tracing; if FALSE, disables it.}

\item{package}{Character. Name of an installed package to debug (e.g., "dplyr").}

\item{r_dir}{Character. Name of the R source directory. Default is "R".}

\item{package_path}{Character. Full path to a package directory (for development packages).}
}
\value{
Invisibly returns a character vector of function names that were traced.
}
\description{
This function enables or disables debugging mode for all functions within a 
package's R directory. When enabled, every function call will print entry/exit messages along 
with elapsed time, making it easy to trace execution flow and identify performance bottlenecks. 
Unlike traditional debugging approaches, this requires no modifications to existing function 
code - simply toggle debugging on or off as needed. The function automatically discovers all 
functions defined in .R files within the specified directory.
}
\details{
This function automatically discovers all functions defined in a package's R directory
and adds entry/exit tracing with timing information. It works with:
\itemize{
  \item Development packages (current directory or specified path)
  \item Installed packages (by name)
}

Priority order: package_path > package > current directory
}
\examples{
\dontrun{
# Debug current package
debugMode(TRUE)

# Debug an installed package
debugMode(TRUE, package = "YourPackage")

# Debug a development package by path
debugMode(TRUE, package_path = "~/Projects/MyPackage")

# Turn off debugging
debugMode(FALSE)
}
}
